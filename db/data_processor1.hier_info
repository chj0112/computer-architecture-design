|data_processor1
input[0] => mux_ac[0].DATAB
input[1] => mux_ac[1].DATAB
input[2] => mux_ac[2].DATAB
input[3] => mux_ac[3].DATAB
MAR_in[0] => MAR[0].DATAIN
MAR_in[1] => MAR[1].DATAIN
MAR_in[2] => MAR[2].DATAIN
alu_sel[0] => simple_alu:ALU.sel[0]
alu_sel[1] => simple_alu:ALU.sel[1]
alu_sel[2] => simple_alu:ALU.sel[2]
input_sel => mux_ac[3].OUTPUTSELECT
input_sel => mux_ac[2].OUTPUTSELECT
input_sel => mux_ac[1].OUTPUTSELECT
input_sel => mux_ac[0].OUTPUTSELECT
ac_load => output[0]~reg0.ENA
ac_load => output[1]~reg0.ENA
ac_load => output[2]~reg0.ENA
ac_load => output[3]~reg0.ENA
ac_load => op1[0].ENA
ac_load => op1[1].ENA
ac_load => op1[2].ENA
ac_load => op1[3].ENA
ram_load => asynch_ram:RAM.wr
mar_load => MAR[0].ENA
mar_load => MAR[1].ENA
mar_load => MAR[2].ENA
clock => MAR[0].CLK
clock => MAR[1].CLK
clock => MAR[2].CLK
clock => output[0]~reg0.CLK
clock => output[1]~reg0.CLK
clock => output[2]~reg0.CLK
clock => output[3]~reg0.CLK
clock => op1[0].CLK
clock => op1[1].CLK
clock => op1[2].CLK
clock => op1[3].CLK
output[0] << output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] << output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] << output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] << output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
m1_out[0] << asynch_ram:RAM.m1[0]
m1_out[1] << asynch_ram:RAM.m1[1]
m1_out[2] << asynch_ram:RAM.m1[2]
m1_out[3] << asynch_ram:RAM.m1[3]
m2_out[0] << asynch_ram:RAM.m2[0]
m2_out[1] << asynch_ram:RAM.m2[1]
m2_out[2] << asynch_ram:RAM.m2[2]
m2_out[3] << asynch_ram:RAM.m2[3]
data_chk[0] << simple_alu:ALU.alu_out[0]
data_chk[1] << simple_alu:ALU.alu_out[1]
data_chk[2] << simple_alu:ALU.alu_out[2]
data_chk[3] << simple_alu:ALU.alu_out[3]


|data_processor1|asynch_ram:RAM
data_in[0] => ram_block[7][0].DATAIN
data_in[0] => ram_block[6][0].DATAIN
data_in[0] => ram_block[5][0].DATAIN
data_in[0] => ram_block[4][0].DATAIN
data_in[0] => ram_block[3][0].DATAIN
data_in[0] => ram_block[2][0].DATAIN
data_in[0] => ram_block[1][0].DATAIN
data_in[0] => ram_block[0][0].DATAIN
data_in[1] => ram_block[7][1].DATAIN
data_in[1] => ram_block[6][1].DATAIN
data_in[1] => ram_block[5][1].DATAIN
data_in[1] => ram_block[4][1].DATAIN
data_in[1] => ram_block[3][1].DATAIN
data_in[1] => ram_block[2][1].DATAIN
data_in[1] => ram_block[1][1].DATAIN
data_in[1] => ram_block[0][1].DATAIN
data_in[2] => ram_block[7][2].DATAIN
data_in[2] => ram_block[6][2].DATAIN
data_in[2] => ram_block[5][2].DATAIN
data_in[2] => ram_block[4][2].DATAIN
data_in[2] => ram_block[3][2].DATAIN
data_in[2] => ram_block[2][2].DATAIN
data_in[2] => ram_block[1][2].DATAIN
data_in[2] => ram_block[0][2].DATAIN
data_in[3] => ram_block[7][3].DATAIN
data_in[3] => ram_block[6][3].DATAIN
data_in[3] => ram_block[5][3].DATAIN
data_in[3] => ram_block[4][3].DATAIN
data_in[3] => ram_block[3][3].DATAIN
data_in[3] => ram_block[2][3].DATAIN
data_in[3] => ram_block[1][3].DATAIN
data_in[3] => ram_block[0][3].DATAIN
address[0] => Decoder0.IN2
address[0] => Mux0.IN2
address[0] => Mux1.IN2
address[0] => Mux2.IN2
address[0] => Mux3.IN2
address[1] => Decoder0.IN1
address[1] => Mux0.IN1
address[1] => Mux1.IN1
address[1] => Mux2.IN1
address[1] => Mux3.IN1
address[2] => Decoder0.IN0
address[2] => Mux0.IN0
address[2] => Mux1.IN0
address[2] => Mux2.IN0
address[2] => Mux3.IN0
wr => ram_block[7][0].IN1
wr => ram_block[6][0].IN1
wr => ram_block[5][0].IN1
wr => ram_block[4][0].IN1
wr => ram_block[3][0].IN1
wr => ram_block[2][0].IN1
wr => ram_block[1][0].IN1
wr => ram_block[0][0].IN1
wr => data_out[3].OE
wr => data_out[2].OE
wr => data_out[1].OE
wr => data_out[0].OE
wr => m1[3]$latch.LATCH_ENABLE
wr => m1[2]$latch.LATCH_ENABLE
wr => m1[1]$latch.LATCH_ENABLE
wr => m1[0]$latch.LATCH_ENABLE
wr => m2[3]$latch.LATCH_ENABLE
wr => m2[2]$latch.LATCH_ENABLE
wr => m2[1]$latch.LATCH_ENABLE
wr => m2[0]$latch.LATCH_ENABLE
data_out[0] <= data_out[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3].DB_MAX_OUTPUT_PORT_TYPE
m1[0] <= m1[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
m1[1] <= m1[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
m1[2] <= m1[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
m1[3] <= m1[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
m2[0] <= m2[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
m2[1] <= m2[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
m2[2] <= m2[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
m2[3] <= m2[3]$latch.DB_MAX_OUTPUT_PORT_TYPE


|data_processor1|simple_alu:ALU
op1[0] => Add0.IN4
op1[0] => Add1.IN8
op1[0] => alu_out.IN0
op1[0] => alu_out.IN0
op1[0] => alu_out.IN0
op1[0] => Mux3.IN6
op1[0] => Mux3.IN5
op1[1] => Add0.IN3
op1[1] => Add1.IN7
op1[1] => alu_out.IN0
op1[1] => alu_out.IN0
op1[1] => alu_out.IN0
op1[1] => Mux2.IN6
op1[1] => Mux2.IN5
op1[2] => Add0.IN2
op1[2] => Add1.IN6
op1[2] => alu_out.IN0
op1[2] => alu_out.IN0
op1[2] => alu_out.IN0
op1[2] => Mux1.IN6
op1[2] => Mux1.IN5
op1[3] => Add0.IN1
op1[3] => Add1.IN5
op1[3] => alu_out.IN0
op1[3] => alu_out.IN0
op1[3] => alu_out.IN0
op1[3] => Mux0.IN6
op1[3] => Mux0.IN5
op2[0] => Add0.IN8
op2[0] => alu_out.IN1
op2[0] => alu_out.IN1
op2[0] => alu_out.IN1
op2[0] => Mux3.IN7
op2[0] => Add1.IN4
op2[1] => Add0.IN7
op2[1] => alu_out.IN1
op2[1] => alu_out.IN1
op2[1] => alu_out.IN1
op2[1] => Mux2.IN7
op2[1] => Add1.IN3
op2[2] => Add0.IN6
op2[2] => alu_out.IN1
op2[2] => alu_out.IN1
op2[2] => alu_out.IN1
op2[2] => Mux1.IN7
op2[2] => Add1.IN2
op2[3] => Add0.IN5
op2[3] => alu_out.IN1
op2[3] => alu_out.IN1
op2[3] => alu_out.IN1
op2[3] => Mux0.IN7
op2[3] => Add1.IN1
sel[0] => Mux0.IN10
sel[0] => Mux1.IN10
sel[0] => Mux2.IN10
sel[0] => Mux3.IN10
sel[1] => Mux0.IN9
sel[1] => Mux1.IN9
sel[1] => Mux2.IN9
sel[1] => Mux3.IN9
sel[2] => Mux0.IN8
sel[2] => Mux1.IN8
sel[2] => Mux2.IN8
sel[2] => Mux3.IN8
alu_out[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
alu_out[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
alu_out[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
alu_out[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


